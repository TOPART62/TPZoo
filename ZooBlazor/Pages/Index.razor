@page "/"
@using System.Globalization;
@using ZooBlazor.DTOs;
@using Microsoft.AspNetCore.Components;
@using ZooBlazor.Services;
@using ZooCore.Models;
@inject Blazored.LocalStorage.ILocalStorageService _localStorage;
@inject NavigationManager Navigator;


<h1>Bienvenue au Zoo M2I</h1>
<div class="container-fluid">


    <h3>Liste des Animaux</h3>

    <!--<div class="row text-center">
        <div class="custom-control custom-checkbox">
            <input type="checkbox" class="custom-control-input" id="admin" @bind="IsAdminMode" />
            <label class="custom-control-label" for="admin">Mode admin</label>
        </div>
    </div>-->
    @if (User is not null)
    {
        <h4>Vous êtes connecté(e) en tant que @User.FullName</h4>
        <button type="button" @onclick="LogOut" class="btn btn-danger">Se déconnecter...</button>
    } else
    {
        <a href="@(Navigator.BaseUri)login" class="btn btn-success">Se connecter</a>
    }

    @if (User is not null && IsAdminMode)
    {

        <div class="row">
            <button class="btn btn-success" @onclick="AddAnimal"><i class="bi bi-plus-square"></i>&ensp; Ajouter un Animal</button>
        </div>

        @if (AnimalToEdit != null)
        {
            <EditForm OnValidSubmit="SubmitAnimal" Model="AnimalToEdit">
                <DataAnnotationsValidator />
                <div class="form-row">
                    <div class="form-group" style="width:100%">
                        <label for="name">Nom:</label>
                        <InputText class="form-control" id="name" placeholder="Saisir le nom" @bind-Value="AnimalToEdit.Name" />
                        <small><ValidationMessage For="() => this.AnimalToEdit.Name" /></small>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group" style="width:100%">
                        <label for="espece">Espece :</label>
                        <InputSelect class="form-control" id="espece" placeholder="Saisir l'espece'" @bind-Value="AnimalToEdit.EspeceString">
                        @foreach(Espece value in Enum.GetValues(typeof(Espece)))
                        {
                            <option value="@(value.ToString())">@(value.ToString())</option>
                        }
                        </InputSelect>
                        <small><ValidationMessage For="() => this.AnimalToEdit.EspeceString" /></small>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group" style="width:100%">
                        <label for="age">Age</label>
                        <InputNumber class="form-control" id="age" placeholder="Saisir l'age" @bind-Value="AnimalToEdit.Age" />
                        <small><ValidationMessage For="() => this.AnimalToEdit.Age" /></small>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group" style="width:100%">
                        <label for="description">Description:</label>
                        <InputText class="form-control" id="description" placeholder="Saisir une description" @bind-Value="AnimalToEdit.Description" />
                        <small><ValidationMessage For="() => this.AnimalToEdit.Description" /></small>
                    </div>
                    <div class="form-row">
                        <div class="form-group" style="width:100%">
                            <label for="imageUrl">Lien vers l'image:</label>
                            <InputText class="form-control" id="imageUrl" placeholder="Saisir le lien vers l'image" @bind-Value="AnimalToEdit.ImageURL" />
                            <small><ValidationMessage For="() => this.AnimalToEdit.ImageURL" /></small>
                        </div>
                    </div>
                </div>
                <div class="form-row">
                    <button type="submit" class="btn btn-primary">Validation</button>
                </div>
            </EditForm>
        }
    }
    <div class="row">
        <div class="col-8">
            @LoadingMessage
            @foreach (var animal in AnimalList)
            {
                <div class="row p-2">
                    <div class="col-2">
                        <img src="@animal.ImageURL" style="width:100%" />
                    </div>
                    <div class="col">
                        <h5 class="text-warning text-uppercase font-weight-bold">@animal.Name</h5>
                        @* <small class="font-italic">@string.Join(", ", animal)</small> *@
                    </div>
                    <div class="col-2">
                        <h5 class="text-primary font-weight-bold">@animal.Espece</h5>
                    </div>
                    <div class="col-2">
                        <h5 class="text-primary font-weight-bold">@animal.Age</h5>
                    </div>

                   @*  <a href="@(Navigator.BaseUri)AnimalDetail/@animal.Id">Voir les détails de l'animal</a> *@
                    <a class="btn btn-primary" href="/animals/@animal.Id">Détails</a>
                    <div class="col-2">
                        <h5 class="text-primary font-weight-bold">@animal.Description</h5>
                        <div class="row p-2">
                            @if (IsAdminMode)
                            {
                                <button class="col btn text-primary border-primary" @onclick="() => EditAnimal(animal)">Crée<i class="bi bi-pencil-square"></i></button>
                                <button class="col btn btn-danger" @onclick="() => DeleteAnimal(animal.Id)">Supprimer<i class="bi bi-trash3"></i></button>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
       
    </div>
   

</div>



